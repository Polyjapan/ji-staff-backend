# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

OPTIONS /                           controllers.OptionsController.rootOptions
OPTIONS /*url                       controllers.OptionsController.options(url: String)

# get all the Japan Impact editions
GET     /editions                   controllers.EditionController.getAll
# get the Japan Impact editions for which applications are open
GET     /editions/active            controllers.EditionController.getActive
# create or update an edition (comitee only)
+nocsrf
PUT     /editions/:year             controllers.EditionController.setEdition(year: String)
# get a specific edition
GET     /editions/:year             controllers.EditionController.getEdition(year: String)

# An endpoint that refresh grants automatically
+nocsrf
POST     /applications/:year/grants  controllers.ApplicationsController.refreshRights(year: String)

# get all sent applications with user profile for an edition (comitee only)
GET     /applications/:year/validated    controllers.ApplicationsController.getSentApplications(year: String)
GET     /applications/:year/waiting    controllers.ApplicationsController.getWaitingApplications(year: String)
GET     /applications/:year/accepted    controllers.ApplicationsController.getAcceptedApplications(year: String)
GET     /applications/:year/refused    controllers.ApplicationsController.getRefusedApplications(year: String)
GET     /applications/:year/:userid  controllers.ApplicationsController.getApplicationByUser(year: String, userid: String)

+nocsrf
POST    /applications/:year/unclaimed   controllers.ApplicationsController.adminCreateApplication(year: String)
+nocsrf
POST    /applications/:year/claim/:claimToken controllers.ApplicationsController.userClaimApplication(year: String, claimToken: String)

# accept or refuse an application (comitee only)
+nocsrf
PUT     /applications/:year/accepted controllers.ApplicationsController.setAccepted(year: String)
+nocsrf
PUT     /applications/:year/refused controllers.ApplicationsController.setRefused(year: String)
+nocsrf
POST     /applications/:year/comments controllers.ApplicationsController.addComment(year: String)

+nocsrf
PUT     /applications/:year/picture     controllers.ApplicationsController.updatePicture(year: String)
+nocsrf
PUT     /applications/:year/parentalAuthorization   controllers.ApplicationsController.updateParentalAuthorization(year: String)

# send and get your application for an edition
+nocsrf
PUT     /applications/:year/:userid/:page   controllers.ApplicationsController.adminUpdateApplication(year: String, userid: String, page: Int)
+nocsrf
PUT     /applications/:year/:page   controllers.ApplicationsController.updateApplication(year: String, page: Int)
+nocsrf
PUT     /applications/:year         controllers.ApplicationsController.validateApplication(year: String)
GET     /applications/:year         controllers.ApplicationsController.getApplication(year: String)
